name: Benchmarks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run benchmarks daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Need full history for comparison
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Run benchmarks
      run: go test -bench=. -benchmem -run=^$ ./... | tee benchmark.txt
    
    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        tool: 'go'
        output-file-path: benchmark.txt
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true
        alert-threshold: '200%'
        comment-on-alert: true
        fail-on-alert: false
        summary-always: true

  stress-test:
    name: Stress Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22
    
    - name: Download dependencies
      run: go mod download
    
    - name: Build binary
      run: go build -o wgo ./cmd/wgo
    
    - name: Create large test dataset
      run: |
        mkdir -p stress-test
        # Create multiple terraform state files for stress testing
        for i in {1..50}; do
          cp test/fixtures/terraform-state.json stress-test/state-$i.tfstate
        done
    
    - name: Run stress tests
      run: |
        # Test concurrent operations
        for i in {1..10}; do
          ./wgo baseline list --config stress-test/config.yaml &
        done
        wait
        
        # Test with large datasets
        ./wgo scan --provider terraform --path stress-test/ --config stress-test/config.yaml || true
    
    - name: Check memory usage
      run: |
        # Run with memory profiling
        go test -memprofile=mem.prof -run=^$ -bench=BenchmarkLargeDataset ./... || true
        
        # Check if any memory leaks or excessive usage
        if [ -f mem.prof ]; then
          go tool pprof -text mem.prof | head -20
        fi