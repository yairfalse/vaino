# Example configuration for systemd collector
systemd:
  # Filters determine which services to monitor
  # Format: "type:value" or "type:value1,value2"
  filters:
    # Monitor services by state
    - "state:active,failed,activating"
    
    # Only monitor service units (not timers, sockets, etc)
    - "type:service"
    
    # Exclude user services
    - "exclude:user@*"
    
    # Monitor container-related services
    - "container:true"
    
    # Monitor services by name pattern
    - "name:nginx"
    - "name:postgresql"
    - "name:redis"

  # Rate limiting for state change events
  # Maximum number of events per minute (100-10000)
  rate_limit: 1000

  # Feature toggles
  monitor_restarts: true      # Track restart patterns
  monitor_resources: true     # Track CPU/memory usage
  monitor_dependencies: true  # Track service dependencies

  # Resource monitoring interval (seconds)
  resource_poll_interval: 10

  # State history retention
  max_state_history: 100      # Number of state transitions to keep per service

  # Restart pattern detection
  restart_analysis:
    # Time window for burst detection (seconds)
    burst_window: 300         # 5 minutes
    
    # Minimum restarts to consider a burst
    burst_threshold: 3
    
    # Number of restarts to keep for pattern analysis
    history_size: 100

  # Alerting thresholds
  alerts:
    # Alert if a service fails more than N times
    failure_threshold: 3
    
    # Alert if restart frequency exceeds N per hour
    restart_frequency_threshold: 10
    
    # Alert on specific patterns
    alert_on_patterns:
      - "flapping"
      - "degrading"

# Example usage in VAINO:
# vaino scan --provider systemd
# vaino diff --provider systemd
# vaino watch --provider systemd --interval 30s